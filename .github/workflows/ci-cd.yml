name: WalletWave CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    name: Build and Test Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [User_Service, Wallet_Service, Transaction_Service, Notification_Service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests=false

  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build-test
    strategy:
      matrix:
        service: [User_Service, Wallet_Service, Transaction_Service, Notification_Service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR again (ensure target exists)
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests=true
          cd ..

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          cd ${{ matrix.service }}
          lower_name=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${lower_name}:latest .

      - name: Push Docker image
        run: |
          lower_name=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]')
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${lower_name}:latest
